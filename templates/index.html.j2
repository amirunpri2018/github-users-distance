<html>
  <head>
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <link rel="stylesheet" href="http://neo4j-contrib.github.io/developer-resources/language-guides/assets/css/main.css">
      <title>GitHub Users Distance</title>
  </head>
  <body>
    <div id="graph">
    </div>
    <div role="navigation" class="navbar navbar-default navbar-static-top">
      <div class="container">
          <div class="row">
              <div class="col-sm-6 col-md-6">
              </div>
              <div class="navbar-header col-sm-6 col-md-6">
                  <div class="logo-well">
                      <a target="_blank" href="https://neo4j.com/developer/resources/">
                      <img src="http://neo4j-contrib.github.io/developer-resources/language-guides/assets/img/logo-white.svg"
                        alt="Neo4j World's Leading Graph Database" id="logo">
                      </a>
                  </div>
                  <div class="navbar-brand">
                      <div class="brand">Neo4j GitHub Users Distance</div>
                  </div>
              </div>
          </div>
      </div>
    </div>
    <div class="row">
      <div class="col-md-5">
          <div class="panel panel-default">
              <div class="panel-heading">Search Results For:
                <a href="/following" class="btn btn-primary btn-sm" role="button">Following</a>
                <a href="/followers" class="btn btn-danger btn-sm" role="button">Followers</a>
                <a href="/members" class="btn btn-info btn-sm" role="button">Repositories</a>
              </div>

                <table class="table table-striped table-hover">
                    <thead>
                    <tr>
                        <th>User/Repo</th>
                        <th>Result</th>
                    </tr>
                    </thead>
                    <tbody>
                      {% if result %}
                        {% for key, value in result.items() %}
                          <tr>
                            <td>{{ key }}</td>
                            <td>{{ value }}</td>
                          </tr>
                        {% endfor %}
                      {% endif %}
                    </tbody>
                </table>
          </div>
      </div>
      <div class="col-md-7">
          <div class="panel panel-default">
              <div class="panel-heading">
                  <form class="navbar-form" id="search">
                    <div class="form-group">
                        Users Distance:
                        <input type = "text" placeholder="First username" name = "first" />
                        <input type = "text" placeholder="Second username" name = "second" />
                        <button class="btn btn-success btn-sm" type="submit">Search</button>
                        <a href="/" class="btn btn-default btn-sm" role="button">Home</a>
                    </div>
                  </form>
              </div>
          </div>

      </div>
    </div>
    <script type="text/javascript" src="//code.jquery.com/jquery-1.11.0.min.js"></script>
    <script src="http://d3js.org/d3.v3.min.js" type="text/javascript"></script>
    <script type="text/javascript">
      $(function () {
        function search() {
            var first = $("#search").find("input[name=first]").val()
            var second = $("#search").find("input[name=second]").val()
            var width = 800, height = 800;

            var force = d3.layout.force()
                    .charge(-200).linkDistance(30).size([width, height]);

            var svg = d3.select("#graph").append("svg")
                    .attr("width", "100%").attr("height", "100%")
                    .attr("pointer-events", "all");

            d3.json("/graph?first="+encodeURIComponent(first)+"&second="+encodeURIComponent(second),
              function(error, graph) {
                if (error) return;

                graph.links = graph.links.filter(function (e) {
                  return e.source !== "undefined"
                })

                force.nodes(graph.nodes).links(graph.links).start();

                var link = svg.selectAll(".link")
                        .data(graph.links).enter()
                        .append("line").attr("class", "link");

                var node = svg.selectAll(".node")
                        .data(graph.nodes).enter()
                        .append("circle")
                        .attr("class", function (d) { return "node "+d.label })
                        .attr("r", 10)
                        .call(force.drag);

                // html title attribute
                node.append("title")
                        .text(function (d) { return d.title; })

                // force feed algo ticks
                force.on("tick", function() {
                    link.attr("x1", function(d) { return d.source.x; })
                            .attr("y1", function(d) { return d.source.y; })
                            .attr("x2", function(d) { return d.target.x; })
                            .attr("y2", function(d) { return d.target.y; });

                    node.attr("cx", function(d) { return d.x; })
                            .attr("cy", function(d) { return d.y; });
                });
            });
        }
        $("#search").submit(search);
      })

    </script>
  </body>
</html>
